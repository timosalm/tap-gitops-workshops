#@ load("@ytt:data", "data")
---
apiVersion: learningcenter.tanzu.vmware.com/v1beta1
kind: Workshop
metadata:
  name: modern-app-arch-spring-cloud-workshop
spec:
  title: Modern App Architectures with Spring Cloud
  description: A workshop on how to mitigate the challenges of a typical microservices application with the Spring Framework ecosystem
  vendor: tanzu.vmware.com
  difficulty: beginner
  duration: 60m
  url: https://github.com/timosalm/modern-app-arch-spring-cloud-workshop
  content:
    image: ghcr.io/timosalm/modern-app-arch-spring-cloud-workshop?ref=main
    files: github.com/timosalm/modern-app-arch-spring-cloud-workshop?ref=main
  session:
    namespaces:
      budget: custom
      role: view
    applications:
      files:
        enabled: true
      examiner:
        enabled: true
      terminal:
        enabled: true
        layout: split
      console:
        enabled: false
      editor:
        enabled: true
      git:
        enabled: true
    env: 
    - name: TAP_INGRESS
      value: #@ data.values.tap.ingress_domain
    ingresses:
    - name: twelve-factors
      protocol: https
      host: 12factor.net 
      port: 443
    objects:
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: $(session_namespace)-session
        namespace: $(session_namespace)
      rules:
      - apiGroups: [""]
        resources: [serviceaccounts, namespaces]
        verbs: [patch]
      - apiGroups: ["metrics.k8s.io"]
        resources: [pods]
        verbs: [list]
      - apiGroups: [ "kappctrl.k14s.io" ]
        resources: [ apps ]
        verbs: [ '*' ]
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: $(session_namespace)-session-rb
        namespace: $(session_namespace)
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: $(session_namespace)-session
      subjects:
        - kind: ServiceAccount
          namespace: $(workshop_namespace)
          name: $(service_account)
    - apiVersion: carto.run/v1alpha1
      kind: Workload
      metadata:
        labels:
          apps.tanzu.vmware.com/workload-type: web
        name: order-service
      spec:
        build:
          env:
          - name: BP_JVM_VERSION
            value: "17"
        source:
          git:
            ref:
              branch: $(session_namespace)
            url: ${git_protocol}://${git_host}/order-service.git
        serviceClaims:
        - name: db
          ref:
            apiVersion: services.apps.tanzu.vmware.com/v1alpha1
            kind: ClassClaim
            name: postgres-1
        - name: rmq
          ref:
            apiVersion: services.apps.tanzu.vmware.com/v1alpha1
            kind: ClassClaim
            name: rmq-1
        - name: cache
          ref:
            apiVersion: services.apps.tanzu.vmware.com/v1alpha1
            kind: ClassClaim
            name: redis-1
        - name: config-server
          ref:
            apiVersion: services.apps.tanzu.vmware.com/v1alpha1
            kind: ResourceClaim
            name: configserver-binding-compatible
    - apiVersion: carto.run/v1alpha1
      kind: Workload
      metadata:
        labels:
          apps.tanzu.vmware.com/workload-type: web
        name: product-service
      spec:
        build:
          env:
          - name: BP_JVM_VERSION
            value: "17"
        source:
          git:
            ref:
              branch: $(session_namespace)
            url: ${git_protocol}://${git_host}/product-service.git
    - apiVersion: carto.run/v1alpha1
      kind: Workload
      metadata:
        labels:
          apps.tanzu.vmware.com/workload-type: server
        name: shipping-service
      spec:
        build:
          env:
          - name: BP_JVM_VERSION
            value: "17"
        source:
          build:
            env:
            - name: BP_JVM_VERSION
              value: "17"
          git:
            ref:
              branch: $(session_namespace)
            url: ${git_protocol}://${git_host}/shipping-service.git
        serviceClaims:
        - name: rmq
          ref:
            apiVersion: services.apps.tanzu.vmware.com/v1alpha1
            kind: ClassClaim
            name: rmq-1
        - name: config-server
          ref:
            apiVersion: services.apps.tanzu.vmware.com/v1alpha1
            kind: ResourceClaim
            name: configserver-binding-compatible
    - apiVersion: carto.run/v1alpha1
      kind: Workload
      metadata:
        labels:
          apps.tanzu.vmware.com/workload-type: web
        name: gateway
      spec:
        build:
          env:
            - name: BP_JVM_VERSION
              value: "17"
        source:
          git:
            ref:
              branch: $(session_namespace)
            url: ${git_protocol}://${git_host}/gateway.git
    - apiVersion: carto.run/v1alpha1
      kind: Workload
      metadata:
        labels:
          apps.tanzu.vmware.com/workload-type: web
        annotations:
          autoscaling.knative.dev/min-scale: "1"
        name: config-server
      spec:
        env:
        - name: SPRING_CLOUD_CONFIG_SERVER_GIT_URI
          value: ${git_protocol}://${git_host}/externalized-configuration.git
        - name: SPRING_CLOUD_CONFIG_SERVER_GIT_DEFAULT_LABEL
          value: $(session_namespace)
        build:
          env:
          - name: BP_JVM_VERSION
            value: "17"
        source:
          git:
            ref:
              branch: main
            url: https://github.com/timosalm/modern-app-arch-spring-cloud-workshop.git
          subPath: samples/config-server
    - apiVersion: services.apps.tanzu.vmware.com/v1alpha1
      kind: ClassClaim
      metadata:
        name: rmq-1
      spec:
        classRef:
          name: rabbitmq-unmanaged
    - apiVersion: services.apps.tanzu.vmware.com/v1alpha1
      kind: ClassClaim
      metadata:
        name: postgres-1
      spec:
        classRef:
          name: postgresql-unmanaged
    - apiVersion: services.apps.tanzu.vmware.com/v1alpha1
      kind: ClassClaim
      metadata:
        name: redis-1
      spec:
        classRef:
          name: redis-unmanaged
    - apiVersion: v1
      kind: Secret
      metadata:
        name: configserver-binding-compatible
      type: Opaque
      stringData:
        type: config
        uri: http://config-server.$(session_namespace)
    - apiVersion: services.apps.tanzu.vmware.com/v1alpha1
      kind: ResourceClaim
      metadata:
        name: configserver-binding-compatible
      spec:
        ref:
          apiVersion: v1
          kind: Secret
          name: configserver-binding-compatible
    - apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: zipkin
      spec:
        selector:
          matchLabels:
            app: zipkin
        template:
          metadata:
            labels:
              app: zipkin
          spec:
            containers:
              - image: openzipkin/zipkin
                name: zipkin
                ports:
                  - containerPort: 9411
                    protocol: TCP
    - apiVersion: v1
      kind: Service
      metadata:
        name: zipkin
      spec:
        selector:
          app: zipkin
        ports:
          - name: http
            port: 9411
            protocol: TCP
            targetPort: 9411
    - apiVersion: projectcontour.io/v1
      kind: HTTPProxy
      metadata:
        name: zipkin
      spec:
        routes:
          - conditions:
              - prefix: /
            services:
              - name: zipkin
                port: 9411
        virtualhost:
          fqdn: "zipkin-$(session_namespace).$(ingress_domain)"
    - apiVersion: carto.run/v1alpha1
      kind: Workload
      metadata:
        labels:
          apps.tanzu.vmware.com/workload-type: web
        name: product-service-native
      spec:
        image: harbor.emea.end2end.link/tap-workshop/product-service-native
        env:
          - name: MANAGEMENT_SERVER_PORT
            value: "8081"
          - name: MANAGEMENT_ENDPOINT_HEALTH_PROBES_ADD_ADDITIONAL_PATHS
            value: "true"
          - name: MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS
            value: always
          - name: MANAGEMENT_ENDPOINTS_WEB_BASE_PATH
            value: /actuator
          - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
            value: '*'
          - name: MANAGEMENT_HEALTH_PROBES_ENABLED
            value: "true"
          - name: SERVER_PORT
            value: "8080"
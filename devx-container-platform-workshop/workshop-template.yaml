#@ load("@ytt:data", "data")
---
apiVersion: training.educates.dev/v1beta1
kind: Workshop
metadata:
  name: devx-platform
spec:
  title: Closing the Developer Experience Gap of Your Container Platforms
  description: A workshop that demonstrates how get started in building an application-aware platform that abstracts away all infrastructure specifics and fosters developer productivity.
  workshop:
    image: ghcr.io/timosalm/devx-container-platform-workshop:main
    files:
    - git:
        url: https://github.com/timosalm/devx-container-platform-workshop
        ref: origin/main
      includePaths:
      - /workshop/**
      - /samples/**
  session:
    namespaces:
      budget: custom
      role: view
      security:
        policy: baseline
    applications:
      console:
        enabled: false
      editor:
        enabled: true
      terminal:
        enabled: true
        layout: split
      registry:
        enabled: true
    env:
    - name: TAP_INGRESS
      value: #@ data.values.tap.ingress_domain
    objects:
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: $(session_namespace)-session
        namespace: $(session_namespace)
      rules:
      - apiGroups: [""]
        resources: [namespaces, serviceaccounts]
        verbs: [patch]
      - apiGroups: [kpack.io]
        resources: [images,builds]
        verbs: ['*']
      - apiGroups: [serving.knative.dev]
        resources: [services,revisions,configurations,routes]
        verbs: ['*']
      - apiGroups: [carto.run]
        resources: [workloads]
        verbs: ['*']
      - apiGroups: [servicebinding.io]
        resources: [servicebindings]
        verbs: ['*']
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: $(session_namespace)-session-rb
        namespace: $(session_namespace)
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: $(session_namespace)-session
      subjects:
        - kind: ServiceAccount
          namespace: $(workshop_namespace)
          name: $(service_account)
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: $(session_namespace)-cluster-resources-reader
      rules:
      - apiGroups: [kpack.io]
        resources: ["clusterstores", "clusterstacks", "clusterbuilders"]
        verbs: ["get", "watch", "list"]
      - apiGroups: [pkg.crossplane.io]
        resources: ["providers"]
        verbs: ["get", "watch", "list"]
      - apiGroups: [apiextensions.k8s.io]
        resources: ["customresourcedefinitions"]
        verbs: ["get", "watch", "list"]
      - apiGroups: [apiextensions.crossplane.io]
        resources: ["compositeresourcedefinitions", "compositions"]
        verbs: ["get", "watch", "list"]
      - apiGroups: [bitnami.database.tanzu.vmware.com]
        resources: ["xpostgresqlinstances"]
        verbs: ["get", "watch", "list", "create", "patch"]
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: $(session_namespace)-cluster-resources
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: $(session_namespace)-cluster-resources-reader
      subjects:
      - kind: Group
        name: system:serviceaccounts:$(workshop_namespace)
        apiGroup: rbac.authorization.k8s.io
    - apiVersion: secretgen.carvel.dev/v1alpha1
      kind: SecretExport
      metadata:
        name: educates-registry-credentials
      spec:
        toNamespace: $(session_namespace)
    - apiVersion: v1
      kind: Namespace
      metadata:
        name: inclusion-db-$(session_namespace)
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: $(session_namespace)-session
        namespace: inclusion-db-$(session_namespace)
      rules:
      - apiGroups: [""]
        resources: [secrets]
        verbs: [get, list]
      - apiGroups: [kubernetes.crossplane.io]
        resources: [objects]
        verbs: [get, list]
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: $(session_namespace)-session-rb
        namespace: inclusion-db-$(session_namespace)
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: $(session_namespace)-session
      subjects:
        - kind: ServiceAccount
          namespace: $(workshop_namespace)
          name: $(service_account)
    - apiVersion: bitnami.database.tanzu.vmware.com/v1alpha1
      kind: XPostgreSQLInstance
      metadata:
        name: inclusion-db-$(session_namespace)
      spec:
        storageGB: 1
        writeConnectionSecretToRef:
          name: inclusion-db-$(session_namespace)
          namespace: $(session_namespace)